/*
 * FMain.java
 */

package dbapp.forms;

import dbapp.Inversion;
import dbapp.Plan;
import dbapp.User;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JOptionPane;

public class FMain extends FrameView {

    public FMain(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    mainPanel = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jSplitPane1 = new javax.swing.JSplitPane();
    jScrollPane1 = new javax.swing.JScrollPane();
    jList1 = new javax.swing.JList();
    jScrollPane2 = new javax.swing.JScrollPane();
    jList2 = new javax.swing.JList();
    menuBar = new javax.swing.JMenuBar();
    javax.swing.JMenu fileMenu = new javax.swing.JMenu();
    jMenuItem1 = new javax.swing.JMenuItem();
    jMenuItem2 = new javax.swing.JMenuItem();
    jMenuItem10 = new javax.swing.JMenuItem();
    jMenuItem12 = new javax.swing.JMenuItem();
    jMenuItem3 = new javax.swing.JMenuItem();
    jMenu1 = new javax.swing.JMenu();
    jMenuItem4 = new javax.swing.JMenuItem();
    jMenuItem6 = new javax.swing.JMenuItem();
    jMenuItem7 = new javax.swing.JMenuItem();
    jMenu2 = new javax.swing.JMenu();
    jMenuItem9 = new javax.swing.JMenuItem();
    jMenuItem5 = new javax.swing.JMenuItem();
    jMenuItem11 = new javax.swing.JMenuItem();
    jMenu3 = new javax.swing.JMenu();
    jMenuItem13 = new javax.swing.JMenuItem();
    jMenuItem14 = new javax.swing.JMenuItem();
    jMenuItem15 = new javax.swing.JMenuItem();

    mainPanel.setName("mainPanel"); // NOI18N

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(dbapp.DBApp.class).getContext().getResourceMap(FMain.class);
    jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N

    jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
    jLabel2.setName("jLabel2"); // NOI18N

    jSplitPane1.setDividerLocation(80);
    jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
    jSplitPane1.setName("jSplitPane1"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    jList1.setName("jList1"); // NOI18N
    jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        jList1ValueChanged(evt);
      }
    });
    jScrollPane1.setViewportView(jList1);

    jSplitPane1.setLeftComponent(jScrollPane1);

    jScrollPane2.setName("jScrollPane2"); // NOI18N

    jList2.setName("jList2"); // NOI18N
    jScrollPane2.setViewportView(jList2);

    jSplitPane1.setRightComponent(jScrollPane2);

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
      mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(mainPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(mainPanelLayout.createSequentialGroup()
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
            .addContainerGap())
          .addComponent(jLabel1)
          .addGroup(mainPanelLayout.createSequentialGroup()
            .addComponent(jLabel2)
            .addContainerGap(290, Short.MAX_VALUE))))
    );
    mainPanelLayout.setVerticalGroup(
      mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(mainPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel2)
        .addContainerGap())
    );

    menuBar.setName("menuBar"); // NOI18N

    fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
    fileMenu.setName("fileMenu"); // NOI18N

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(dbapp.DBApp.class).getContext().getActionMap(FMain.class, this);
    jMenuItem1.setAction(actionMap.get("Login")); // NOI18N
    jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
    jMenuItem1.setName("jMenuItem1"); // NOI18N
    fileMenu.add(jMenuItem1);

    jMenuItem2.setAction(actionMap.get("nuevo")); // NOI18N
    jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
    jMenuItem2.setEnabled(false);
    jMenuItem2.setName("jMenuItem2"); // NOI18N
    fileMenu.add(jMenuItem2);

    jMenuItem10.setAction(actionMap.get("modUser")); // NOI18N
    jMenuItem10.setText(resourceMap.getString("jMenuItem10.text")); // NOI18N
    jMenuItem10.setName("jMenuItem10"); // NOI18N
    fileMenu.add(jMenuItem10);

    jMenuItem12.setAction(actionMap.get("delUser")); // NOI18N
    jMenuItem12.setText(resourceMap.getString("jMenuItem12.text")); // NOI18N
    jMenuItem12.setName("jMenuItem12"); // NOI18N
    fileMenu.add(jMenuItem12);

    jMenuItem3.setAction(actionMap.get("quit")); // NOI18N
    jMenuItem3.setText(resourceMap.getString("jMenuItem3.text")); // NOI18N
    jMenuItem3.setName("jMenuItem3"); // NOI18N
    fileMenu.add(jMenuItem3);

    menuBar.add(fileMenu);

    jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N

    jMenuItem4.setAction(actionMap.get("newPlan")); // NOI18N
    jMenuItem4.setText(resourceMap.getString("jMenuItem4.text")); // NOI18N
    jMenuItem4.setName("jMenuItem4"); // NOI18N
    jMenu1.add(jMenuItem4);

    jMenuItem6.setAction(actionMap.get("modPlan")); // NOI18N
    jMenuItem6.setText(resourceMap.getString("jMenuItem6.text")); // NOI18N
    jMenuItem6.setName("jMenuItem6"); // NOI18N
    jMenu1.add(jMenuItem6);

    jMenuItem7.setAction(actionMap.get("delPlan")); // NOI18N
    jMenuItem7.setText(resourceMap.getString("jMenuItem7.text")); // NOI18N
    jMenuItem7.setName("jMenuItem7"); // NOI18N
    jMenu1.add(jMenuItem7);

    menuBar.add(jMenu1);

    jMenuItem9.setAction(actionMap.get("newInv")); // NOI18N
    jMenuItem9.setText(resourceMap.getString("jMenuItem9.text")); // NOI18N
    jMenuItem9.setName("jMenuItem9"); // NOI18N
    jMenu2.add(jMenuItem9);

    jMenuItem5.setAction(actionMap.get("modInv")); // NOI18N
    jMenuItem5.setText(resourceMap.getString("jMenuItem5.text")); // NOI18N
    jMenuItem5.setName("jMenuItem5"); // NOI18N
    jMenu2.add(jMenuItem5);

    jMenuItem11.setAction(actionMap.get("delInv")); // NOI18N
    jMenuItem11.setText(resourceMap.getString("jMenuItem11.text")); // NOI18N
    jMenuItem11.setName("jMenuItem11"); // NOI18N
    jMenu2.add(jMenuItem11);

    menuBar.add(jMenu2);

    jMenu3.setText(resourceMap.getString("jMenu3.text")); // NOI18N
    jMenu3.setName("jMenu3"); // NOI18N

    jMenuItem13.setAction(actionMap.get("newInv")); // NOI18N
    jMenuItem13.setText(resourceMap.getString("jMenuItem13.text")); // NOI18N
    jMenuItem13.setName("jMenuItem13"); // NOI18N
    jMenu3.add(jMenuItem13);

    jMenuItem14.setAction(actionMap.get("modInv")); // NOI18N
    jMenuItem14.setText(resourceMap.getString("jMenuItem14.text")); // NOI18N
    jMenuItem14.setName("jMenuItem14"); // NOI18N
    jMenu3.add(jMenuItem14);

    jMenuItem15.setAction(actionMap.get("delInv")); // NOI18N
    jMenuItem15.setText(resourceMap.getString("jMenuItem15.text")); // NOI18N
    jMenuItem15.setName("jMenuItem15"); // NOI18N
    jMenu3.add(jMenuItem15);

    menuBar.add(jMenu3);

    setComponent(mainPanel);
    setMenuBar(menuBar);
  }// </editor-fold>//GEN-END:initComponents

		private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
			ReloadInvs();
		}//GEN-LAST:event_jList1ValueChanged
	public void Reload(){
		DefaultListModel lm = new DefaultListModel();
		if (usuario == null ){
			jLabel1.setText("Usuario o contraseña incorrecto");
			jLabel2.setText("");
			usuario = null;
		} else {
			jLabel1.setText("Bienvenido " + usuario.getNombre() + " " + usuario.getApellido());
			for (int i = 0; i < usuario.getCantPlanes(); i++){
					Plan p = usuario.getPlan(i);
					lm.addElement(p.toString());
			}
		}
		jList1.setModel(lm);
		ReloadInvs();
	}
	public void ReloadInvs(){
			Integer index = jList1.getSelectedIndex();
			DefaultListModel lm = new DefaultListModel();
			jLabel2.setText("");
			if (usuario != null){
				if (index > -1 ) {
							Plan p = usuario.getPlan(index);
						for (int i = 0; i < p.getCanInversion(); i++){
									lm.addElement(p.getInversion(i));
						}
				}
				jLabel2.setText("Total: $" + usuario.getTotal());
			}
			jList2.setModel(lm);		
	}
	
	@Action
	public void Login() {
		Login_Usuario lu = new Login_Usuario(this.getFrame(), true);
		lu.setVisible(true);

		if (!lu.result){return;}

		String username, password;
		username = lu.getUser();
		password = lu.getPassword();
		usuario = new User(username, password);
		jMenuItem2.setEnabled(usuario.getAdmin());
		Reload();
	}

	@Action
	public void nuevo() {
		Nuevo_Usuario nu = new Nuevo_Usuario(this.getFrame(), true);
		nu.setUsuario(new User());
		nu.setVisible(true);
		Reload();
	}

	@Action
	public void newPlan() {
		if (usuario == null){return;}
		Nuevo_Plan np = new Nuevo_Plan(this.getFrame(), true);
		np.setPlan(usuario.newPlan());
		np.setVisible(true);
		Reload();
	}

	@Action
	public void newInv() {
		int index = jList1.getSelectedIndex();
		if ((usuario == null) || (index <0)){return;}
		
		Nueva_Inversion ni = new Nueva_Inversion(this.getFrame(), true);
		Plan p = usuario.getPlan(index);
		ni.setInv(p.newInversion());
		ni.setVisible(true);
		ReloadInvs();
	}

	@Action
	public void modPlan() {
		int index = this.jList1.getSelectedIndex();
		if ( (usuario == null ) || (index <0)){return;}
		Nuevo_Plan np = new Nuevo_Plan(this.getFrame(), true);
		
		np.setPlan(usuario.getPlan(index));
		np.setVisible(true);
		Reload();
	}

	@Action
	public void modInv() {
		int index = this.jList1.getSelectedIndex();
		int index2 = this.jList2.getSelectedIndex();
		
		if ( (usuario == null ) || (index <0) || (index2<0)){return;}
		Inversion i = usuario.getPlan(index).getInversion(index2);

		Nueva_Inversion ni = new Nueva_Inversion(this.getFrame(), true);
		ni.setInv(i);
		ni.setVisible(true);
		Reload();
	}

	@Action
	public void modUser() {
		if (usuario == null){ return; }
		Nuevo_Usuario nu = new Nuevo_Usuario(this.getFrame(), true);
		nu.setUsuario(usuario);
		nu.setVisible(true);
		Reload();
	}

	@Action
	public void delInv() {
		Integer i1 = jList1.getSelectedIndex();
		Integer i2 = jList2.getSelectedIndex();
		if ( i1<0 || i2<0){ return;}

		Plan p = usuario.getPlan(i1);
		p.delInversion(i2);
		Reload();
	}

		@Action
		public void delPlan() {
				Integer i1 = jList1.getSelectedIndex();
				if (i1<0){ return;}
				usuario.delPlan(i1);
				Reload();
		}

		@Action
		public void delUser() {
				if (usuario==null) {return;}
				if (usuario.getUser().equals("admin") && (usuario.getAdmin())){
						JOptionPane.showMessageDialog(null,
							"Está intentando borrar el usuario admin, por su seguridad esta operación no se realizará.\n"
							+"I'm sorry, Dave. I'm afraid I can't do that.");
						return;
				}
				usuario.delete();
				usuario = null;
				Reload();
				jLabel1.setText("Ingrese su usuario");
				jLabel2.setText("");
		}

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JList jList1;
  private javax.swing.JList jList2;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenu jMenu3;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuItem jMenuItem10;
  private javax.swing.JMenuItem jMenuItem11;
  private javax.swing.JMenuItem jMenuItem12;
  private javax.swing.JMenuItem jMenuItem13;
  private javax.swing.JMenuItem jMenuItem14;
  private javax.swing.JMenuItem jMenuItem15;
  private javax.swing.JMenuItem jMenuItem2;
  private javax.swing.JMenuItem jMenuItem3;
  private javax.swing.JMenuItem jMenuItem4;
  private javax.swing.JMenuItem jMenuItem5;
  private javax.swing.JMenuItem jMenuItem6;
  private javax.swing.JMenuItem jMenuItem7;
  private javax.swing.JMenuItem jMenuItem9;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JSplitPane jSplitPane1;
  private javax.swing.JPanel mainPanel;
  private javax.swing.JMenuBar menuBar;
  // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

	//Cosas nuestras
	private User usuario=null;
}
